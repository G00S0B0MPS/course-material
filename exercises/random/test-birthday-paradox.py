import pytest
import student


@pytest.mark.timeout(1)
@pytest.mark.parametrize("n, expected", [
    (1, 0.),
    (2, 0.00273973),
    (3, 0.00820417),
    (4, 0.0163559),
    (5, 0.0271356),
    (6, 0.0404625),
    (7, 0.0562357),
    (8, 0.0743353),
    (9, 0.0946238),
    (10, 0.116948),
    (11, 0.141141),
    (12, 0.167025),
    (13, 0.19441),
    (14, 0.223103),
    (15, 0.252901),
    (16, 0.283604),
    (17, 0.315008),
    (18, 0.346911),
    (19, 0.379119),
    (20, 0.411438),
    (21, 0.443688),
    (22, 0.475695),
    (23, 0.507297),
    (24, 0.538344),
    (25, 0.5687),
    (26, 0.598241),
    (27, 0.626859),
    (28, 0.654461),
    (29, 0.680969),
    (30, 0.706316),
    (31, 0.730455),
    (32, 0.753348),
    (33, 0.774972),
    (34, 0.795317),
    (35, 0.814383),
    (36, 0.832182),
    (37, 0.848734),
    (38, 0.864068),
    (39, 0.87822),
    (40, 0.891232),
    (41, 0.903152),
    (42, 0.91403),
    (43, 0.923923),
    (44, 0.932885),
    (45, 0.940976),
    (46, 0.948253),
    (47, 0.954774),
    (48, 0.960598),
    (49, 0.96578),
    (50, 0.970374),
])
def test_birthday_paradox(n, expected):
    actual = student.birthday_paradox(n, 1000)
    assert pytest.approx(expected, abs=2) == actual
